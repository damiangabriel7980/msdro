[  {    "name": "Get_All_Details_For_Conferences",    "description": "<p>Retrieve all conferences and all their details (rooms, speakers)</p>",    "group": "Check_In_Conferences_API",    "type": "get",    "url": "/apiConferences/getConferencesFull",    "title": "Retrieve all conferences and all their details (rooms, speakers)",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl -i -H \"Authorization: Bearer \" http://localhost:8080/apiConferences/getConferencesFull",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "json",            "optional": false,            "field": "response.success",            "description": "<p>an array containing all conferences and all their details (rooms, speakers)</p>"          },          {            "group": "Success 200",            "type": "json",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n     success : [\n\n     ],\n     message: \"Cererea a fost procesata cu succes\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"Error Message\",\n     data: {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiConferences.js",    "groupTitle": "Check_In_Conferences_API",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Get_User_Profile",    "description": "<p>Retrieve a user's profile</p>",    "group": "Check_In_Conferences_API",    "type": "get",    "url": "/apiConferences/userProfile",    "title": "Retrieve a user's profile",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl -i -H \"Authorization: Bearer \" http://localhost:8080/apiConferences/userProfile",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "json",            "optional": false,            "field": "response.success",            "description": "<p>an object containing user data</p>"          },          {            "group": "Success 200",            "type": "json",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n     success : {\n\n     },\n     message: \"Cererea a fost procesata cu succes\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiConferences.js",    "groupTitle": "Check_In_Conferences_API",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Redirect_Create_Account",    "description": "<p>Redirect to the global API for creating an account</p>",    "group": "Check_In_Conferences_API",    "type": "post",    "url": "/apiConferences/createAccount",    "title": "Redirect to the global API for creating an account",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl -i -X POST -H \"Authorization: Bearer \" http://localhost:8080/apiConferences/createAccount",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "json",            "optional": false,            "field": "response",            "description": "<p>an empty object</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiConferences.js",    "groupTitle": "Check_In_Conferences_API",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Reset_Password",    "description": "<p>Redirect to the global API for resetting a password</p>",    "group": "Check_In_Conferences_API",    "type": "post",    "url": "/apiConferences/resetPass",    "title": "Redirect to the global API for resetting a password",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl -i -X POST -H \"Authorization: Bearer \" http://localhost:8080/apiConferences/resetPass",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "json",            "optional": false,            "field": "response",            "description": "<p>an empty object</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiConferences.js",    "groupTitle": "Check_In_Conferences_API",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Retrieve_Conference_And_AddIt_To_User",    "description": "<p>Retrieve a conference and add it to a user</p>",    "group": "Check_In_Conferences_API",    "type": "post",    "url": "/apiConferences/scanConference",    "title": "Retrieve a conference and add it to a user",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>the id of the conference</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -X POST -H \"Authorization: Bearer \" http://localhost:8080/apiConferences/scanConference",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "json",            "optional": false,            "field": "response.success",            "description": "<p>an object containing the scanned conference</p>"          },          {            "group": "Success 200",            "type": "json",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n     success : {\n\n     },\n     message: \"Cererea a fost procesata cu succes\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"Error Message\",\n     data: {}\n}",          "type": "json"        },        {          "title": "Error-Response (4xx):",          "content": "HTTP/1.1 404 NotFound Error\n{\n     error: \"Error Message\",\n     data: {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "EntityNotFound",            "description": "<p>Error - Entity not found</p>"          }        ]      }    },    "filename": "app/apiConferences.js",    "groupTitle": "Check_In_Conferences_API",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Retrieve_Room_And_Add_Associated_Conference_To_User",    "description": "<p>Retrieve a conference and add it to a user using a room id</p>",    "group": "Check_In_Conferences_API",    "type": "post",    "url": "/apiConferences/scanRoom",    "title": "Retrieve a conference and add it to a user",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>the id of the room</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -X POST -H \"Authorization: Bearer \" http://localhost:8080/apiConferences/scanRoom",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "json",            "optional": false,            "field": "response.success",            "description": "<p>an object containing the scanned conference</p>"          },          {            "group": "Success 200",            "type": "json",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n     success : {\n\n     },\n     message: \"Cererea a fost procesata cu succes\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"Error Message\",\n     data: {}\n}",          "type": "json"        },        {          "title": "Error-Response (4xx):",          "content": "HTTP/1.1 404 NotFound Error\n{\n     error: \"Error Message\",\n     data: {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "EntityNotFound",            "description": "<p>Error - Entity not found</p>"          }        ]      }    },    "filename": "app/apiConferences.js",    "groupTitle": "Check_In_Conferences_API",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Unsubscribe_Push_Notifications",    "description": "<p>Un-subscribe from push notifications</p>",    "group": "Check_In_Conferences_API",    "type": "post",    "url": "/apiConferences/unsubscribeFromPush",    "title": "Un-subscribe from push notifications",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>a unique token to identify device to un-subscribe the user from push notifications</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -X POST -H \"Authorization: Bearer \" http://localhost:8080/apiConferences/unsubscribeFromPush",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "json",            "optional": false,            "field": "response.success",            "description": "<p>an empty object</p>"          },          {            "group": "Success 200",            "type": "json",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n     success : {\n\n     },\n     message: \"Cererea a fost procesata cu succes\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"Error Message\",\n     data: {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiConferences.js",    "groupTitle": "Check_In_Conferences_API",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Get_Content_Preview",    "description": "<p>Retrieve a preview for a specific content from medic section</p>",    "group": "Content_Preview",    "type": "get",    "url": "/apiPreview/previewItem",    "title": "Retrieve a preview for a specific content from medic section",    "version": "1.0.0",    "permission": [      {        "name": "none"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id of the content from medic section</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "type",            "description": "<p>The type of the content (can be resource, pathology or product)</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "articleType",            "description": "<p>The type of an article (optional; can be 1 = national, 2 = international, 3 = scientific)</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage (with id):",        "content": "curl -i http://localhost:8080/apiPreview/previewItem?id=kdwooj2131313&type=resource&articleType=3",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "response.success",            "description": "<p>an object containing a specific content from medic section</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\":\n  {\n\n  },\n  \"message\": \"Cererea a fost procesata cu succes\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n  \"error\": \"Query Error\",\n  \"data\" : {}\n}",          "type": "json"        },        {          "title": "Error-Response (4xx):",          "content": "HTTP/1.1 404 Not Found Error\n{\n  \"error\": \"Not Found Error\",\n  \"data\" : {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "EntityNotFound",            "description": "<p>Error - Entity not found</p>"          }        ]      }    },    "filename": "app/apiPreview.js",    "groupTitle": "Content_Preview"  },  {    "name": "Contract_Management",    "description": "<p>Retrieve a contract template</p>",    "group": "Contract_Management",    "type": "get",    "url": "/apiPublic/apiContractManagement/templates",    "title": "Retrieve a contract template",    "version": "1.0.0",    "permission": [      {        "name": "None",        "title": "Any user can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Date",            "optional": false,            "field": "timestamp",            "description": "<p>A date to filter the number of template</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:8080/apiContractManagement/templates?timestamp=09/26/2016",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "response.success",            "description": "<p>an object containing the current version and the download URL</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\":\n  {\n\n  }\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n  \"error\": \"Query Error\",\n  \"data\" : {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiContractManagement.js",    "groupTitle": "Contract_Management"  },  {    "name": "Delete_Courses",    "description": "<p>Delete a course</p>",    "group": "Courses",    "type": "delete",    "url": "/apiPublic/apiCourses/courses",    "title": "Delete a course",    "version": "1.0.0",    "permission": [      {        "name": "admin",        "title": "Only users with admin rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id of a course</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -X DELETE -H \"Authorization: Bearer \" http://localhost:8080/apiPublic/apiCourses/courses?id=23fwafwa1221f",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "response.success",            "description": "<p>an empty object</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\":\n  {\n\n  },\n  \"message\": \"Cererea a fost procesata cu succes\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n  \"error\": \"Query Error\",\n  \"data\" : {}\n}",          "type": "json"        },        {          "title": "Error-Response (400):",          "content": "HTTP/1.1 400 Bad Request Error\n{\n  \"error\": \"Error\",\n  \"data\" : {}\n}",          "type": "json"        },        {          "title": "Error-Response (404):",          "content": "HTTP/1.1 404 Not found Error\n{\n  \"error\": \"Error\",\n  \"data\" : {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "BadRequest",            "description": "<p>Error - Bad request</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "EntityNotFound",            "description": "<p>Error - Entity not found</p>"          }        ]      }    },    "filename": "app/apiCourses.js",    "groupTitle": "Courses",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Get_Courses",    "description": "<p>Retrieve a course / list of courses</p>",    "group": "Courses",    "type": "get",    "url": "/apiPublic/apiCourses/courses",    "title": "Retrieve a course / list of courses",    "version": "1.0.0",    "permission": [      {        "name": "admin",        "title": "Only users with admin rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id of a course</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage (with id):",        "content": "curl -i -H \"Authorization: Bearer \" http://localhost:8080/apiPublic/apiCourses/courses?id=23fwafwa1221f",        "type": "curl"      },      {        "title": "Example usage (no id):",        "content": "curl -i -H \"Authorization: Bearer \" http://localhost:8080/apiPublic/apiCourses/courses",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "response.success",            "description": "<p>an object containing the course / an array of courses</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\":\n  {\n\n  },\n  \"message\": \"Cererea a fost procesata cu succes\"\n}",          "type": "json"        },        {          "title": "Success-Response (no id):",          "content": "HTTP/1.1 200 OK\n{\n  \"success\":[\n  {\n\n  }\n ],\n  \"message\": \"Cererea a fost procesata cu succes\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n  \"error\": \"Query Error\",\n  \"data\" : {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiCourses.js",    "groupTitle": "Courses",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Post_Courses",    "description": "<p>Create a new course</p>",    "group": "Courses",    "type": "post",    "url": "/apiPublic/apiContractManagement/templates",    "title": "Create a new course",    "version": "1.0.0",    "permission": [      {        "name": "admin",        "title": "Only users with admin rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "courseModel",            "description": "<p>An object containing the properties of the course Mongo model</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -X POST -H \"Authorization: Bearer \" -d '{\"name\":\"someName\",\"content\":\"someContent\"}' http://localhost:8080/apiCourses/courses",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "response.success",            "description": "<p>an object containing the newly created course</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\":\n  {\n\n  },\n  \"message\": \"Cererea a fost procesata cu succes\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n  \"error\": \"Query Error\",\n  \"data\" : {}\n}",          "type": "json"        },        {          "title": "Error-Response (4xx):",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"error\": \"Bad request\",\n  \"data\" : {}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "BadRequest",            "description": "<p>The POST request doesn't contain all necessary data</p>"          }        ],        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiCourses.js",    "groupTitle": "Courses",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Update_Courses",    "description": "<p>Update an existing course</p>",    "group": "Courses",    "type": "put",    "url": "/apiPublic/apiContractManagement/templates",    "title": "Update an existing course",    "version": "1.0.0",    "permission": [      {        "name": "admin",        "title": "Only users with admin rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "course_id",            "description": "<p>The id of the course we want to update</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "courseModel",            "description": "<p>An object containing the properties of the course Mongo model</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -X PUT -H \"Authorization: Bearer \" -d '{\"name\":\"someName\",\"content\":\"someContent\"}' http://localhost:8080/apiCourses/courses?id=23nf88y23nddy",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "response.success",            "description": "<p>an object containing the updated course</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\":\n  {\n\n  },\n  \"message\": \"Cererea a fost procesata cu succes\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n  \"error\": \"Query Error\",\n  \"data\" : {}\n}",          "type": "json"        },        {          "title": "Error-Response (4xx):",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"error\": \"Bad request\",\n  \"data\" : {}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "BadRequest",            "description": "<p>The PUT request doesn't contain all necessary data</p>"          }        ],        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiCourses.js",    "groupTitle": "Courses",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Send_Email_From_DPOC_App",    "description": "<p>Send an email from DPOC Application</p>",    "group": "DPOC",    "type": "post",    "url": "/apiDPOC/report",    "title": "Send an email from DPOC Application",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>The message to send via email</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "phone",            "description": "<p>The phone number of the sender</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "accepted",            "description": "<p>If the sender doesn't agree to be contacted</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "patientNumber",            "description": "<p>The patient's number</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "patientSex",            "description": "<p>The patient's sex</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The name of the patient</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "reportType",            "description": "<p>The type of the report</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "reporterType",            "description": "<p>The sender's type</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": " curl -i -X POST -H \"Authorization: Bearer \" -d '{\"message\":\"someMessage\",\"phone\":\"1234141222\", \"accepted\": true,\n\"patientNumber\": \"34\", \"patientSex\": \"M\", \"name\": \"John\", \"reportType\": \"someType\", \"reporterType\": \"medic\"}'\n http://localhost:8080/apiDPOC/report",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "response",            "description": "<p>an empty object</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiDPOC.js",    "groupTitle": "DPOC",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "validate_Device_DPOC_App",    "description": "<p>Validate a device for DPOC application</p>",    "group": "DPOC",    "type": "get",    "url": "/apiDPOC/validate",    "title": "Validate a device for DPOC application",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "authorization-code",            "description": "<p>a code specific to a registered DPOC device</p>"          },          {            "group": "Header",            "type": "String",            "optional": false,            "field": "authorization-uuid",            "description": "<p>the id of the registered DPOC device</p>"          },          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -H \"Authorization: Bearer \" -H \"authorization-code: someCode\" -H\n\"authorization-uuid: someUUID\" http://localhost:8080/apiDPOC/report",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "response",            "description": "<p>an empty object</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n\n}",          "type": "json"        },        {          "title": "Error-Response (4xx):",          "content": "HTTP/1.1 403 AccessForbidden Error\n{\n\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "AccessForbidden",            "description": "<p>Error - Access is forbidden</p>"          }        ]      }    },    "filename": "app/apiDPOC.js",    "groupTitle": "DPOC"  },  {    "name": "Complete_Staywell_Account",    "description": "<p>Complete Staywell account</p>",    "group": "Global_API",    "type": "post",    "url": "/apiGloballyShared/completeProfile/",    "title": "Complete Staywell account",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>a user object containing the following properties: title, name, email, password, registeredFrom, job, profession, groupsID, address, citiesID, practiceType, phone, subscriptions, specialty</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "activation",            "description": "<p>Contains the properties : type - can be 'code' or 'file' and value - can be file or code string</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -x POST -H \"Authorization: Bearer \" -d '{user: {}, activation: {}}' http://localhost:8080/apiGloballyShared/completeProfile",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "response.success",            "description": "<p>an empty object</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   success : {\n\n   },\n   message : \"A message\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        },        {          "title": "Error-Response (4xx):",          "content": "HTTP/1.1 400 BadRequest Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "BadRequest",            "description": "<p>Error - Bad request</p>"          }        ]      }    },    "filename": "app/apiGloballyShared.js",    "groupTitle": "Global_API",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Create_Staywell_Account",    "description": "<p>Create a Staywell account</p>",    "group": "Global_API",    "type": "post",    "url": "/apiGloballyShared/createAccountStaywell/",    "title": "Create a Staywell account",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>a user object containing the following properties: title, name, email, password, registeredFrom, job, profession, groupsID, address, citiesID, practiceType, phone, subscriptions, specialty</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "activation",            "description": "<p>Contains the properties : type - can be 'code' or 'file' and value - can be file or code string</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -x POST -H \"Authorization: Bearer \" -d '{user: {}, activation: {}}' http://localhost:8080/apiGloballyShared/createAccountStaywell",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "response.success",            "description": "<p>an empty object</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   success : {\n\n   },\n   message : \"A message\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        },        {          "title": "Error-Response (4xx):",          "content": "HTTP/1.1 400 BadRequest Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "BadRequest",            "description": "<p>Error - Bad request</p>"          }        ]      }    },    "filename": "app/apiGloballyShared.js",    "groupTitle": "Global_API",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Create_Staywell_Account_Mobile",    "description": "<p>Create a Staywell account (mobile only)</p>",    "group": "Global_API",    "type": "post",    "url": "/apiGloballyShared/createAccountMobile/",    "title": "Create a Staywell account (mobile only)",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>a user object containing the following properties: title, name, email, password, registeredFrom, job</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -x POST -H \"Authorization: Bearer \" -d '{user: {}}' http://localhost:8080/apiGloballyShared/createAccountMobile",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "response.success",            "description": "<p>an empty object</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   success : {\n\n   },\n   message : \"A message\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        },        {          "title": "Error-Response (4xx):",          "content": "HTTP/1.1 400 BadRequest Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "BadRequest",            "description": "<p>Error - Bad request</p>"          }        ]      }    },    "filename": "app/apiGloballyShared.js",    "groupTitle": "Global_API",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Request_Password_Reset",    "description": "<p>Request password reset</p>",    "group": "Global_API",    "type": "post",    "url": "/apiGloballyShared/requestPasswordReset",    "title": "Request password reset",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>the user's email</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -x POST -H \"Authorization: Bearer \" -d '{email : ''}' http://localhost:8080/apiGloballyShared/requestPasswordReset",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "response.success",            "description": "<p>an object containing the email the reset password email was sent to</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   success : {\n     mailto: ''\n   },\n   message : \"A message\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        },        {          "title": "Error-Response (4xx):",          "content": "HTTP/1.1 400 BadRequest Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "BadRequest",            "description": "<p>Error - Bad request</p>"          }        ]      }    },    "filename": "app/apiGloballyShared.js",    "groupTitle": "Global_API",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Retrieve_Amazon_Bucket",    "description": "<p>Retrieve Amazon Bucket</p>",    "group": "Global_API",    "type": "get",    "url": "/apiGloballyShared/appSettings/",    "title": "Retrieve Amazon Bucket",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl -i -H \"Authorization: Bearer \" http://localhost:8080/apiGloballyShared/appSettings",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "response.success",            "description": "<p>an object containing the link to the Amazon bucket</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   success : {\n     amazonPrefix: ''\n   },\n   message : \"A message\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiGloballyShared.js",    "groupTitle": "Global_API",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Retrieve_Professions",    "description": "<p>Retrieve a list of professions</p>",    "group": "Global_API",    "type": "get",    "url": "/apiGloballyShared/accountActivation/professions",    "title": "Retrieve a list of professions",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl -i -H \"Authorization: Bearer \" http://localhost:8080/apiGloballyShared/accountActivation/professions",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "response.success",            "description": "<p>an array of professions</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   success : [{\n\n   }],\n   message : \"A message\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiGloballyShared.js",    "groupTitle": "Global_API",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Retrieve_cities",    "description": "<p>Retrieve a list of cities from a county</p>",    "group": "Global_API",    "type": "get",    "url": "/apiGloballyShared/accountActivation/cities",    "title": "Retrieve a list of cities from a county",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "county",            "description": "<p>the id of the county</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -H \"Authorization: Bearer \" http://localhost:8080/apiGloballyShared/accountActivation/cities",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "response.success",            "description": "<p>an array of cities</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   success : [{\n\n   }],\n   message : \"A message\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiGloballyShared.js",    "groupTitle": "Global_API",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Retrieve_counties",    "description": "<p>Retrieve a list of counties</p>",    "group": "Global_API",    "type": "get",    "url": "/apiGloballyShared/accountActivation/specialty",    "title": "Retrieve a list of counties",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl -i -H \"Authorization: Bearer \" http://localhost:8080/apiGloballyShared/accountActivation/counties",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "response.success",            "description": "<p>an array of counties</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   success : [{\n\n   }],\n   message : \"A message\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiGloballyShared.js",    "groupTitle": "Global_API",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Retrieve_groups",    "description": "<p>Retrieve a list of groups based on profession</p>",    "group": "Global_API",    "type": "get",    "url": "/apiGloballyShared/accountActivation/signupGroups/:profession",    "title": "Retrieve a list of groups based on profession",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "profession",            "description": "<p>The id of the profession</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -H \"Authorization: Bearer \" http://localhost:8080/apiGloballyShared/accountActivation/signupGroups/215r25fqfwfdf2",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "response.success",            "description": "<p>an array of groups</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   success : [{\n\n   }],\n   message : \"A message\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiGloballyShared.js",    "groupTitle": "Global_API",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Retrieve_specialties",    "description": "<p>Retrieve a list of specialties</p>",    "group": "Global_API",    "type": "get",    "url": "/apiGloballyShared/accountActivation/specialty",    "title": "Retrieve a list of specialties",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl -i -H \"Authorization: Bearer \" http://localhost:8080/apiGloballyShared/accountActivation/specialty",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "response.success",            "description": "<p>an array of specialties</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   success : [{\n\n   }],\n   message : \"A message\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiGloballyShared.js",    "groupTitle": "Global_API",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Get_GuideLines_By_Date",    "description": "<p>Retrieve a set of guidelines categories by last updated date</p>",    "group": "Guidelines",    "type": "get",    "url": "/apiGuidelines/last_updated",    "title": "Retrieve a set of guidelines categories by last updated date",    "version": "1.0.0",    "permission": [      {        "name": "none"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Date",            "optional": false,            "field": "lastModified",            "description": "<p>A date for filtering the guidelines categories</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:8080/apiGuidelines/last_updated?lastModified=08/22/2016",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "response.success",            "description": "<p>an array containing a list of guidelines categories (or an empty object if no categories were found)</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\":\n  {\n\n  },\n  \"message\": \"Cererea a fost procesata cu succes\"\n}",          "type": "json"        },        {          "title": "Success-Response (304):",          "content": "HTTP/1.1 304 Not Modified\n{\n  \"success\":\n  {\n\n  },\n  \"message\": \"Cererea a fost procesata cu succes\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n  \"error\": \"Query Error\",\n  \"data\" : {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiGuidelines.js",    "groupTitle": "Guidelines"  },  {    "name": "Get_GuideLines_Category_Files",    "description": "<p>Retrieve a set of guidelines categories files</p>",    "group": "Guidelines",    "type": "get",    "url": "/apiGuidelines/category",    "title": "Retrieve a set of guidelines categories files",    "version": "1.0.0",    "permission": [      {        "name": "none"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id of the guidelines category</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:8080/apiGuidelines/category?id=2rf1ffsq2dwdawd",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "response.success",            "description": "<p>an array containing a list of files from a guidelines category (or an empty object if the category wasn't found)</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\":\n  {\n\n  },\n  \"message\": \"Cererea a fost procesata cu succes\"\n}",          "type": "json"        },        {          "title": "Success-Response (304):",          "content": "HTTP/1.1 304 Not Modified\n{\n  \"success\":\n  {\n\n  },\n  \"message\": \"Cererea a fost procesata cu succes\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n  \"error\": \"Query Error\",\n  \"data\" : {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiGuidelines.js",    "groupTitle": "Guidelines"  },  {    "name": "IPad_Applications_Update",    "description": "<p>Check if there are newer versions of Staywell iPad apps</p>",    "group": "IPad_Applications",    "type": "get",    "url": "/apiPublic/apiAplicationUpgrade",    "title": "Check if there are newer versions of Staywell iPad apps",    "version": "1.0.0",    "permission": [      {        "name": "None",        "title": "Any user can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The name of the application</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:8080/apiAplicationUpgrade?name=arcoxia",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "response.success",            "description": "<p>an object containing the current version and the download URL</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\":\n    {\n    \"version\": \"1.2\",\n    \"downloadUrl\": \"https://\"\n    }\n},\n  \"message\": \"Cererea a fost procesata cu succes\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n  \"error\": \"Query Error\",\n  \"data\" : {}\n}",          "type": "json"        },        {          "title": "Error-Response (4xx):",          "content": "HTTP/1.1 4xx Error\n{\n  \"error\": \"Error Message\",\n  \"data\" : {}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "ApplicationNotFound",            "description": "<p>The requested app was not found.</p>"          }        ],        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiAplicationUpgrade.js",    "groupTitle": "IPad_Applications"  },  {    "name": "Get_Januvia_Users",    "description": "<p>Retrieve a list of Januvia Application users</p>",    "group": "Januvia_Application",    "type": "get",    "url": "/apiJanuvia/users",    "title": "Retrieve a list of Januvia Application users",    "version": "1.0.0",    "permission": [      {        "name": "none"      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:8080/apiJanuvia/users",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "response.success",            "description": "<p>an array containing a list of Januvia Application users</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\":[\n  {\n\n  }],\n  \"message\": \"Cererea a fost procesata cu succes\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n  \"error\": \"Query Error\",\n  \"data\" : {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiJanuvia.js",    "groupTitle": "Januvia_Application"  },  {    "name": "Check_Email",    "description": "<p>Check if a user already exists / if the email address is valid</p>",    "group": "Live_Conferences",    "type": "delete",    "url": "/api/streamAdmin/checkEmail",    "title": "Check if a user already exists / if the email address is valid",    "version": "1.0.0",    "permission": [      {        "name": "streamAdmin",        "title": "Only users with streamAdmin rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>The email of the user</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "checkIfExists",            "description": "<p>If we want to check if the user exists</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "checkEmailAddress",            "description": "<p>If we want to verify an email address</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -X POST -d '{username: \"john@test.com\"}' http://localhost:8080/api/streamAdmin/checkEmail?checkIfExists=true&checkEmailAddress=false",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "response.success",            "description": "<p>a list of users / an empty object</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response (checkIfExists):",          "content": "HTTP/1.1 200 OK\n{\n   success : [{\n\n   }],\n   message : \"A message\"\n}",          "type": "json"        },        {          "title": "Success-Response (checkEmailAddress) :",          "content": "HTTP/1.1 200 OK\n{\n   success : {\n\n   },\n   message : \"A message\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        },        {          "title": "Error-Response (4xx):",          "content": "HTTP/1.1 4xx BadRequest Error\n{\n\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "BadRequest",            "description": "<p>Error - Bad request</p>"          }        ]      }    },    "filename": "app/apiStreamAdmin.js",    "groupTitle": "Live_Conferences"  },  {    "name": "Create_Conference",    "description": "<p>Create a conference</p>",    "group": "Live_Conferences",    "type": "post",    "url": "/api/streamAdmin/liveConferences",    "title": "Create a conference",    "version": "1.0.0",    "permission": [      {        "name": "streamAdmin",        "title": "Only users with streamAdmin rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "conferenceObj",            "description": "<p>A conference object (based on liveConferences model)</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage (with id):",        "content": "curl -i -X POST -d 'conferenceObject'  http://localhost:8080/api/streamAdmin/liveConferences",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "response.success",            "description": "<p>an object with the newly created conference</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response :",          "content": "HTTP/1.1 200 OK\n{\n   success : {\n\n   },\n   message : \"A message\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiStreamAdmin.js",    "groupTitle": "Live_Conferences"  },  {    "name": "Delete_Conference",    "description": "<p>Delete a conference</p>",    "group": "Live_Conferences",    "type": "delete",    "url": "/api/streamAdmin/liveConferences",    "title": "Delete a conference",    "version": "1.0.0",    "permission": [      {        "name": "streamAdmin",        "title": "Only users with streamAdmin rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id of the conference</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -X DELETE  http://localhost:8080/api/streamAdmin/liveConferences?id=jdnwadw7871231b3b",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "response.success",            "description": "<p>an empty object</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response :",          "content": "HTTP/1.1 200 OK\n{\n   success : {\n\n   },\n   message : \"A message\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiStreamAdmin.js",    "groupTitle": "Live_Conferences"  },  {    "name": "Regexp",    "description": "<p>Retrieve the regexp validation strings from back-end</p>",    "group": "Live_Conferences",    "type": "get",    "url": "/api/streamAdmin/regexp",    "title": "Retrieve the regexp validation strings from back-end",    "version": "1.0.0",    "permission": [      {        "name": "streamAdmin",        "title": "Only users with streamAdmin rights can access this route",        "description": ""      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:8080/api/streamAdmin/regexp",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "response.success",            "description": "<p>an object containing the validation strings</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   success : {\n\n   },\n   message : \"A message\"\n}",          "type": "json"        }      ]    },    "filename": "app/apiStreamAdmin.js",    "groupTitle": "Live_Conferences"  },  {    "name": "Retrieve_Conferences",    "description": "<p>Retrieve a list of conferences or a single conference</p>",    "group": "Live_Conferences",    "type": "get",    "url": "/api/streamAdmin/liveConferences",    "title": "Retrieve a list of conferences or a single conference",    "version": "1.0.0",    "permission": [      {        "name": "streamAdmin",        "title": "Only users with streamAdmin rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "id",            "description": "<p>An id for the conference</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "separatedViewers",            "description": "<p>if we wish to receive the associated viewers</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage (with id):",        "content": "curl -i  http://localhost:8080/api/streamAdmin/liveConferences?id=owkdoad9w912121&separatedViewers=true",        "type": "curl"      },      {        "title": "Example usage (without id):",        "content": "curl -i  http://localhost:8080/api/streamAdmin/liveConferences",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "response.success",            "description": "<p>an array of live conferences / an object with a specific conference</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response (without id):",          "content": "HTTP/1.1 200 OK\n{\n   success : [{\n\n   }],\n   message : \"A message\"\n}",          "type": "json"        },        {          "title": "Success-Response (with id):",          "content": "HTTP/1.1 200 OK\n{\n   success : {\n\n   },\n   message : \"A message\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        },        {          "title": "Error-Response (4xx):",          "content": "HTTP/1.1 4xx EntityNotFound Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "EntityNotFound",            "description": "<p>Error - Entity not found</p>"          }        ]      }    },    "filename": "app/apiStreamAdmin.js",    "groupTitle": "Live_Conferences"  },  {    "name": "Send_Conference_Invitation",    "description": "<p>Send email to invite users to participate at a conference</p>",    "group": "Live_Conferences",    "type": "post",    "url": "/api/streamAdmin/sendNotification",    "title": "Send email to invite users to participate at a conference",    "version": "1.0.0",    "permission": [      {        "name": "streamAdmin",        "title": "Only users with streamAdmin rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "conferencesStateURL",            "description": "<p>The URL to access the conference in medic section</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id of the conference</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "spkString",            "description": "<p>A string containing the names of the speakers</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -x POST -d '{conferencesStateURL: 'someURL', spkString: 'speakersString'}' http://localhost:8080/api/streamAdmin/sendNotification",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "response.success",            "description": "<p>an empty object</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   success : {\n\n   },\n   message : \"A message\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiStreamAdmin.js",    "groupTitle": "Live_Conferences"  },  {    "name": "Send_Conference_Updates_Notification",    "description": "<p>Send email to notify users for changes in a conference</p>",    "group": "Live_Conferences",    "type": "put",    "url": "/api/streamAdmin/sendNotification",    "title": "Send email to notify users for changes in a conference",    "version": "1.0.0",    "permission": [      {        "name": "streamAdmin",        "title": "Only users with streamAdmin rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "conferencesStateURL",            "description": "<p>The URL to access the conference in medic section</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id of the conference</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "spkString",            "description": "<p>A string containing the names of the speakers</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -x PUT -d '{conferencesStateURL: 'someURL', spkString: 'speakersString'}' http://localhost:8080/api/streamAdmin/sendNotification?id=dnwuadhw71723163bd",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "response.success",            "description": "<p>an empty object</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   success : {\n\n   },\n   message : \"A message\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiStreamAdmin.js",    "groupTitle": "Live_Conferences"  },  {    "name": "Therapeutic_areas",    "description": "<p>Retrieve a list of therapeutic areas</p>",    "group": "Live_Conferences",    "type": "get",    "url": "/api/streamAdmin/therapeutic_areas",    "title": "Retrieve a list of therapeutic areas",    "version": "1.0.0",    "permission": [      {        "name": "streamAdmin",        "title": "Only users with streamAdmin rights can access this route",        "description": ""      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:8080/api/streamAdmin/therapeutic_areas",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "response.success",            "description": "<p>a list of therapeutic areas</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   success : [{\n\n   }],\n   message : \"A message\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiStreamAdmin.js",    "groupTitle": "Live_Conferences"  },  {    "name": "Update_Conference",    "description": "<p>Update a conference</p>",    "group": "Live_Conferences",    "type": "put",    "url": "/api/streamAdmin/liveConferences",    "title": "Update a conference",    "version": "1.0.0",    "permission": [      {        "name": "streamAdmin",        "title": "Only users with streamAdmin rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id of the conference</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "isEnabled",            "description": "<p>The current status of a conference (true=enabled)</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "updateImage",            "description": "<p>If we want to update a conference's image</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "image_path",            "description": "<p>The new Amazon path for the image previously mentioned</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "removeUser",            "description": "<p>If we want to remove a user from a conference</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": true,            "field": "userObject",            "description": "<p>An object containing a user model.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "addSpeaker",            "description": "<p>If we want to add a speaker (use previous user param for creating the user).</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "addViewers",            "description": "<p>If we want to add a viewer (use previous user param for creating the user).</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "moderator",            "description": "<p>An object containing a user model.</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -X PUT -d '{isEnabled: '', image_path: '', userObject : {}, moderator: {}}'\nhttp://localhost:8080/api/streamAdmin/liveConferences?id=okwdoai923913njff&updateImage=false&removeUser=false&addSpeaker=false&addViewers=false",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "response.success",            "description": "<p>the number of conferences that were updated</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response :",          "content": "HTTP/1.1 200 OK\n{\n   success : {\n      1\n   },\n   message : \"A message\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        },        {          "title": "Error-Response (4xx):",          "content": "HTTP/1.1 4xx EntityNotFound Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "EntityNotFound",            "description": "<p>Error - Entity not found</p>"          }        ]      }    },    "filename": "app/apiStreamAdmin.js",    "groupTitle": "Live_Conferences"  },  {    "name": "User_Groups",    "description": "<p>Retrieve a list of user groups</p>",    "group": "Live_Conferences",    "type": "get",    "url": "/api/streamAdmin/groups",    "title": "Retrieve a list of user groups",    "version": "1.0.0",    "permission": [      {        "name": "streamAdmin",        "title": "Only users with streamAdmin rights can access this route",        "description": ""      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:8080/api/streamAdmin/groups",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "response.success",            "description": "<p>a list of groups</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   success : [{\n\n   }],\n   message : \"A message\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiStreamAdmin.js",    "groupTitle": "Live_Conferences"  },  {    "name": "User_List",    "description": "<p>Retrieve a list of users</p>",    "group": "Live_Conferences",    "type": "get",    "url": "/api/streamAdmin/users",    "title": "Retrieve a list of users",    "version": "1.0.0",    "permission": [      {        "name": "streamAdmin",        "title": "Only users with streamAdmin rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "groups",            "description": "<p>If we want to retrieve the user's groups</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:8080/api/streamAdmin/users?groups=true",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "response.success",            "description": "<p>a list of users</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   success : [{\n\n   }],\n   message : \"A message\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiStreamAdmin.js",    "groupTitle": "Live_Conferences"  },  {    "name": "Create_Chat_Thread",    "description": "<p>Create a chat thread</p>",    "group": "MSD_DOC",    "type": "post",    "url": "/apiMSDDoc/chats/",    "title": "Create a chat thread",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>The id of the user creating the chat</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "postId",            "description": "<p>The id of the news post we want to create a chat</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "postOwner",            "description": "<p>The owner of the post</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "type",            "description": "<p>The type of a chat (can be null, 'userBased' or 'postBased')</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -x POST -H \"Authorization: Bearer \" -d '{userId: '', postId: '', postOwner: '', type: ''}' http://localhost:8080/apiMSDDoc/chats",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "response.success",            "description": "<p>The newly created chat</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   success : {\n\n   },\n   message : \"A message\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        },        {          "title": "Error-Response (4xx):",          "content": "HTTP/1.1 400 BadRequest Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "BadRequest",            "description": "<p>Error - Bad request</p>"          }        ]      }    },    "filename": "app/apiMSDDoc.js",    "groupTitle": "MSD_DOC",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Create_News_Post",    "description": "<p>Create a news post</p>",    "group": "MSD_DOC",    "type": "post",    "url": "/apiMSDDoc/newsPost/",    "title": "Create a news post",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>The news post title</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>The news post content</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -x POST -H \"Authorization: Bearer \" -d '{title: '', message: ''}' http://localhost:8080/apiMSDDoc/newsPost",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "response.success",            "description": "<p>the newly created news post object</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   success : {\n\n   },\n   message : \"A message\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiMSDDoc.js",    "groupTitle": "MSD_DOC",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "News_Post_Image",    "description": "<p>Attach a image to a news post</p>",    "group": "MSD_DOC",    "type": "post",    "url": "/apiMSDDoc/image/newspost",    "title": "Attach a image to a news post",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "files.file",            "description": "<p>The image file</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id of the news post</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -x POST -H \"Authorization: Bearer \" --data-binary \"@path/to/file\" http://localhost:8080/apiMSDDoc/image/newspost?id=du8awd822313fnnf",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "response.success",            "description": "<p>An object containing the path to the image</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   success : {\n\n   },\n   message : \"A message\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        },        {          "title": "Error-Response (4xx):",          "content": "HTTP/1.1 400 BadRequest Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "BadRequest",            "description": "<p>Error - Bad request</p>"          }        ]      }    },    "filename": "app/apiMSDDoc.js",    "groupTitle": "MSD_DOC",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Retrieve_Chats",    "description": "<p>Retrieve a list of chats the current user has participated</p>",    "group": "MSD_DOC",    "type": "get",    "url": "/apiMSDDoc/chats/",    "title": "Retrieve a list of chats the current user has participated",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "pageSize",            "description": "<p>How many medics we want to receive (for multiple medics)</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "created",            "description": "<p>Filter chats by the created date</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "type",            "description": "<p>The type of a chat (can be null or 'topic')</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -H \"Authorization: Bearer \" http://localhost:8080/apiMSDDoc/chats?type=topic&pageSize=10&created=22/08/2016",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "response.success",            "description": "<p>A list of chats</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   success : [{\n\n   }],\n   message : \"A message\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiMSDDoc.js",    "groupTitle": "MSD_DOC",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Retrieve_Medics",    "description": "<p>Retrieve a medic / multiple medics</p>",    "group": "MSD_DOC",    "type": "get",    "url": "/apiMSDDoc/medics/",    "title": "Retrieve a medic / multiple medics",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "pageSize",            "description": "<p>How many medics we want to receive (for multiple medics)</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id of the medic (the other two parameters don't apply if used)</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "skip",            "description": "<p>How many medics we want to skip from the beginning of the query results</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -H \"Authorization: Bearer \" http://localhost:8080/apiMSDDoc/medics?id=null&pageSize=10&skip=20",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "response.success",            "description": "<p>a medic object / multiple medic objects</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response (with id):",          "content": "HTTP/1.1 200 OK\n{\n   success : {\n\n   },\n   message : \"A message\"\n}",          "type": "json"        },        {          "title": "Success-Response (without id):",          "content": "HTTP/1.1 200 OK\n{\n   success : [{\n\n   }],\n   message : \"A message\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        },        {          "title": "Error-Response (4xx):",          "content": "HTTP/1.1 404 EntityNotFound Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "EntityNotFound",            "description": "<p>Error - Entity not found</p>"          }        ]      }    },    "filename": "app/apiMSDDoc.js",    "groupTitle": "MSD_DOC",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Retrieve_NewsPost",    "description": "<p>Retrieve a news post / multiple news posts based on the create date</p>",    "group": "MSD_DOC",    "type": "get",    "url": "/apiMSDDoc/newsPost/",    "title": "Retrieve a news post / multiple news posts based on the create date",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "pageSize",            "description": "<p>How many news posts we want to receive (for multiple news posts)</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id of the news post (the other two parameters don't apply if used)</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "created",            "description": "<p>The date the news post was created (for multiple news posts)</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -H \"Authorization: Bearer \" http://localhost:8080/apiMSDDoc/newsPost?id=90cwwdadwadawf1&pageSize=10&created=08/22/2016",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "response.success",            "description": "<p>a news post object / multiple news posts objects</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response (with id):",          "content": "HTTP/1.1 200 OK\n{\n   success : {\n\n   },\n   message : \"A message\"\n}",          "type": "json"        },        {          "title": "Success-Response (without id):",          "content": "HTTP/1.1 200 OK\n{\n   success : [{\n\n   }],\n   message : \"A message\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiMSDDoc.js",    "groupTitle": "MSD_DOC",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Subscribe_Unsubscribe_Chat_Thread",    "description": "<p>Subscribe / un-subscribe to a chat thread</p>",    "group": "MSD_DOC",    "type": "put",    "url": "/apiMSDDoc/chats/",    "title": "Subscribe / un-subscribe to a chat thread",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "chatId",            "description": "<p>The id of the chat</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "subscribe",            "description": "<p>If true, the user will subscribe to a chat thread</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -x PUT -H \"Authorization: Bearer \" http://localhost:8080/apiMSDDoc/chats?chatId=21nf387r32rn23ndf&subscribe=true",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "response.success",            "description": "<p>An empty object</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   success : {\n\n   },\n   message : \"A message\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        },        {          "title": "Error-Response (4xx):",          "content": "HTTP/1.1 400 BadRequest Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "BadRequest",            "description": "<p>Error - Bad request</p>"          }        ]      }    },    "filename": "app/apiMSDDoc.js",    "groupTitle": "MSD_DOC",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Update_Profile_Image",    "description": "<p>Update user profile picture</p>",    "group": "MSD_DOC",    "type": "post",    "url": "/apiMSDDoc/image/profile",    "title": "Update user profile picture",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "files.file",            "description": "<p>The image file</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -x POST -H \"Authorization: Bearer \" --data-binary \"@path/to/file\" http://localhost:8080/apiMSDDoc/image/profile",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "response.success",            "description": "<p>An object containing the path to the image</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   success : {\n\n   },\n   message : \"A message\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        },        {          "title": "Error-Response (4xx):",          "content": "HTTP/1.1 404 EntityNotFound Error\n{\n     error: \"\",\n     data: {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "EntityNotFound",            "description": "<p>Error - Entity not found</p>"          }        ]      }    },    "filename": "app/apiMSDDoc.js",    "groupTitle": "MSD_DOC",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Activate_Account_Mobile",    "description": "<p>Activate user account (mobile only)</p>",    "group": "Main_Routes",    "type": "get",    "url": "/activateAccount/:token",    "title": "Activate user account (mobile only)",    "version": "1.0.0",    "permission": [      {        "name": "none"      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:8080/activateAccount/idwi9772313nd7ww",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "html",            "optional": false,            "field": "response",            "description": "<p>a HTML page</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   accepted: true\n}",          "type": "HTML"        }      ]    },    "filename": "app/routes.js",    "groupTitle": "Main_Routes"  },  {    "name": "Activate_Account_Web",    "description": "<p>Activate user account (web only)</p>",    "group": "Main_Routes",    "type": "get",    "url": "/activateAccountStaywell/:token",    "title": "Activate user account (web only)",    "version": "1.0.0",    "permission": [      {        "name": "none"      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:8080/activateAccountStaywell/idwi9772313nd7ww",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "html",            "optional": false,            "field": "response",            "description": "<p>a HTML page</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   accepted: true\n}",          "type": "HTML"        }      ]    },    "filename": "app/routes.js",    "groupTitle": "Main_Routes"  },  {    "name": "Check_Email_Exists",    "description": "<p>Check if a email address is already used by a user</p>",    "group": "Main_Routes",    "type": "post",    "url": "/checkEmailExists",    "title": "Check if a email address is already used by a user",    "version": "1.0.0",    "permission": [      {        "name": "none"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>An email address</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -X POST -d '{\"email\" : \"john@test.com\"}' http://localhost:8080/checkEmailExists",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "response.success.exists",            "description": "<p>an object confirming the user's existence (can be true or false)</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   success : {\n         exists: true\n   },\n   message : \"A message\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/routes.js",    "groupTitle": "Main_Routes"  },  {    "name": "Log_Out_User",    "description": "<p>User log out and redirect to public section/login page</p>",    "group": "Main_Routes",    "type": "get",    "url": "/logout",    "title": "User log out and redirect to public section/login page",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      },      {        "name": "admin",        "title": "Only users with admin rights can access this route",        "description": ""      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl http://localhost:8080/logout",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "html",            "optional": false,            "field": "response",            "description": "<p>the main page of the preview section</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n\n}",          "type": "html"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/routes.js",    "groupTitle": "Main_Routes"  },  {    "name": "Login",    "description": "<p>User login redirect</p>",    "group": "Main_Routes",    "type": "get",    "url": "/login",    "title": "User login",    "version": "1.0.0",    "permission": [      {        "name": "none"      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:8080/login",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "html",            "optional": false,            "field": "response",            "description": "<p>a HTML page</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   accepted: true\n}",          "type": "HTML"        }      ]    },    "filename": "app/routes.js",    "groupTitle": "Main_Routes"  },  {    "name": "Login",    "description": "<p>User login</p>",    "group": "Main_Routes",    "type": "post",    "url": "/login",    "title": "User login",    "version": "1.0.0",    "permission": [      {        "name": "none"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>an email</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>a password</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -X POST -i -d '{\"username\": \"josh@test.com\", \"password\" : \"pass\"}' http://localhost:8080/login",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "html",            "optional": false,            "field": "response",            "description": "<p>a HTML page</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   accepted: true\n}",          "type": "HTML"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (4xx):",          "content": "HTTP/1.1 4xx AccessForbidden Error\n{\n\n}",          "type": "json"        },        {          "title": "Error-Response (4xx):",          "content": "HTTP/1.1 4xx BadRequest Error\n{\n\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "AccessForbidden",            "description": "<p>Error - Access is forbidden</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "BadRequest",            "description": "<p>Error - Bad request</p>"          }        ]      }    },    "filename": "app/routes.js",    "groupTitle": "Main_Routes"  },  {    "name": "Merck_Manual",    "description": "<p>View the Merck Manual</p>",    "group": "Main_Routes",    "type": "get",    "url": "/merckManual",    "title": "View the Merck Manual",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:8080/merckManual",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "PDF",            "optional": false,            "field": "response",            "description": "<p>a PDF document</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n\n}",          "type": "PDF"        }      ]    },    "filename": "app/routes.js",    "groupTitle": "Main_Routes"  },  {    "name": "Redirect_User_To_Medic_Section_If_Authenticated",    "description": "<p>Redirect the user to the medic section if he's authenticated, otherwise show him the login page/modal window</p>",    "group": "Main_Routes",    "type": "get",    "url": "/pro",    "title": "Redirect the user to the medic section if he's authenticated, otherwise show him the login page/modal window",    "version": "1.0.0",    "permission": [      {        "name": "none"      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl http://localhost:8080/pro",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "html",            "optional": false,            "field": "response",            "description": "<p>the login page/the main page of public section with the login modal opened</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n\n}",          "type": "html"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/routes.js",    "groupTitle": "Main_Routes"  },  {    "name": "Redirect_User_To_Preview_Section",    "description": "<p>Redirect the user to preview section of a medic content. If authenticated, redirect him to the content</p>",    "group": "Main_Routes",    "type": "get",    "url": "/preview",    "title": "Redirect the user to preview section of a medic content. If authenticated, redirect him to the content",    "version": "1.0.0",    "permission": [      {        "name": "none"      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl http://localhost:8080/preview",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "html",            "optional": false,            "field": "response",            "description": "<p>the main page of the preview section</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n\n}",          "type": "html"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/routes.js",    "groupTitle": "Main_Routes"  },  {    "name": "Redirect_User_To_Proper_Main_Page",    "description": "<p>Redirect the user to the proper main page</p>",    "group": "Main_Routes",    "type": "get",    "url": "/",    "title": "Redirect the user to the proper main page",    "version": "1.0.0",    "permission": [      {        "name": "none"      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl http://localhost:8080/",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "html",            "optional": false,            "field": "response",            "description": "<p>the main page</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n\n}",          "type": "html"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/routes.js",    "groupTitle": "Main_Routes"  },  {    "name": "Reset_Password_Page",    "description": "<p>Reset a user's password - send forgotPass page</p>",    "group": "Main_Routes",    "type": "get",    "url": "/reset/:token",    "title": "Reset a user's password - send forgotPass page",    "version": "1.0.0",    "permission": [      {        "name": "none"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>an reset token</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:8080/reset/iojwdj818281631361hdwwd",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "html",            "optional": false,            "field": "response",            "description": "<p>a HTML page</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n\n}",          "type": "HTML"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "html",            "optional": false,            "field": "HTMLErrorMessage",            "description": ""          }        ]      },      "examples": [        {          "title": "Error-Response (4xx):",          "content": "HTTP/1.1 4xx Error\n{\n\n}",          "type": "html"        }      ]    },    "filename": "app/routes.js",    "groupTitle": "Main_Routes"  },  {    "name": "Reset_Password_Success",    "description": "<p>Reset a user's password - change password and return success page</p>",    "group": "Main_Routes",    "type": "post",    "url": "/reset/:token",    "title": "Reset a user's password - change password and return success page",    "version": "1.0.0",    "permission": [      {        "name": "none"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>an reset token</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>the current password</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "confirm",            "description": "<p>the confirmed current password</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -X POST -d '{\"password\" : \"pass\", \"confirm\" : \"pass\"}' http://localhost:8080/reset/iojwdj818281631361hdwwd",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "html",            "optional": false,            "field": "response",            "description": "<p>a HTML page</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n\n}",          "type": "HTML"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "html",            "optional": false,            "field": "HTMLErrorMessage",            "description": ""          }        ]      },      "examples": [        {          "title": "Error-Response (4xx):",          "content": "HTTP/1.1 4xx Error\n{\n\n}",          "type": "html"        }      ]    },    "filename": "app/routes.js",    "groupTitle": "Main_Routes"  },  {    "name": "Site_Map",    "description": "<p>View the Site_Map</p>",    "group": "Main_Routes",    "type": "get",    "url": "/sitemap",    "title": "View the Site_Map",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:8080/sitemap",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "XML",            "optional": false,            "field": "response",            "description": "<p>a XML document</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n\n}",          "type": "XML"        }      ]    },    "filename": "app/routes.js",    "groupTitle": "Main_Routes"  },  {    "name": "Skill_share",    "description": "<p>View the skillshare page</p>",    "group": "Main_Routes",    "type": "get",    "url": "/skillshare",    "title": "View the skillshare page",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:8080/skillshare",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "html",            "optional": false,            "field": "response",            "description": "<p>a HTML page</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n\n}",          "type": "HTML"        }      ]    },    "filename": "app/routes.js",    "groupTitle": "Main_Routes"  },  {    "name": "Unsubscribe_Newsletter",    "description": "<p>Un-subscribe a user from newsletter</p>",    "group": "Main_Routes",    "type": "get",    "url": "/unsubscribe",    "title": "Reset a user's password - change password and return success page",    "version": "1.0.0",    "permission": [      {        "name": "none"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "hashedEmail",            "description": "<p>a hashed email</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:8080/unsubscribe?user=iojwdj818281631361hdwwd",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "html",            "optional": false,            "field": "response",            "description": "<p>a HTML page</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n\n}",          "type": "HTML"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "html",            "optional": false,            "field": "HTMLErrorMessage",            "description": ""          }        ]      },      "examples": [        {          "title": "Error-Response (4xx):",          "content": "HTTP/1.1 4xx Error\n{\n\n}",          "type": "html"        }      ]    },    "filename": "app/routes.js",    "groupTitle": "Main_Routes"  },  {    "name": "Activate_Account",    "description": "<p>Activate a user's account</p>",    "group": "Mobile_API",    "type": "get",    "url": "/apiMobileShared/activateAccount/:token",    "title": "Activate a user's account",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>an activation token</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -H \"Authorization: Bearer \" http://localhost:8080/apiMobileShared/activateAccount/iojwdj818281631361hdwwd",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "html",            "optional": false,            "field": "response",            "description": "<p>a HTML page</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n\n}",          "type": "HTML"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiMobileShared.js",    "groupTitle": "Mobile_API",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Get_User_Profile",    "description": "<p>Retrieve a user's profile</p>",    "group": "Mobile_API",    "type": "get",    "url": "/apiMobileShared/userProfile",    "title": "Retrieve a user's profile",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl -i -H \"Authorization: Bearer \" http://localhost:8080/apiMobileShared/userProfile",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "json",            "optional": false,            "field": "response.success",            "description": "<p>an object containing user data</p>"          },          {            "group": "Success 200",            "type": "json",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n     success : {\n\n     },\n     message: \"Cererea a fost procesata cu succes\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiMobileShared.js",    "groupTitle": "Mobile_API",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Redirect_Create_Account",    "description": "<p>Redirect to the global API for creating an account</p>",    "group": "Mobile_API",    "type": "post",    "url": "/apiMobileShared/createAccount",    "title": "Redirect to the global API for creating an account",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl -i -X POST -H \"Authorization: Bearer \" http://localhost:8080/apiMobileShared/createAccount",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "json",            "optional": false,            "field": "response",            "description": "<p>an empty object</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiMobileShared.js",    "groupTitle": "Mobile_API",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Reset_Password",    "description": "<p>Redirect to the global API for resetting a password</p>",    "group": "Mobile_API",    "type": "post",    "url": "/apiMobileShared/resetPass",    "title": "Redirect to the global API for resetting a password",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl -i -X POST -H \"Authorization: Bearer \" http://localhost:8080/apiMobileShared/resetPass",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "json",            "optional": false,            "field": "response",            "description": "<p>an empty object</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiMobileShared.js",    "groupTitle": "Mobile_API",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Update_User_Data",    "description": "<p>Update a user's data</p>",    "group": "Mobile_API",    "type": "put",    "url": "/apiMobileShared/userProfile",    "title": "Update a user's data",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "citiesID",            "description": "<p>an array of ids of cities</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "jobsID",            "description": "<p>an array of ids of jobs</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>the user's name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "phone",            "description": "<p>the user's phone number</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "birthday",            "description": "<p>the user's birthday date</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "therapeutic-areasID",            "description": "<p>an array of therapeutic areas ids</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "address",            "description": "<p>the user's address</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "practiceType",            "description": "<p>can be 1 = Public, 2 = Private</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "title",            "description": "<p>can be 1 = Dl, 2 = Dna, 3 = Prof, 4 = Dr</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -X PUT -H \"Authorization: Bearer \" -d '{\"citiesID\" : [], \"jobsID\" : [], \"name\" : \"\",\n\"phone\" : \"\", \"birthday\" : \"\",\n\"therapeutic-areasID\" : [], \"address\" : \"\", \"practiceType\" : 1, \"title\" : 1\n}' http://localhost:8080/apiMobileShared/userProfile",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "json",            "optional": false,            "field": "response.success",            "description": "<p>an empty object</p>"          },          {            "group": "Success 200",            "type": "json",            "optional": false,            "field": "response.message",            "description": "<p>A message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n     success : {\n\n     },\n     message: \"Cererea a fost procesata cu succes\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiMobileShared.js",    "groupTitle": "Mobile_API",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Get_Prescriptions",    "description": "<p>Retrieve a list of prescriptions</p>",    "group": "MyPrescription",    "type": "get",    "url": "/apiMyPrescription/config",    "title": "Retrieve a list of prescriptions",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "last-modified",            "description": "<p>a date used for filtering prescriptions</p>"          },          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -H \"Authorization: Bearer \" -H \"last-modified : someDate\" http://localhost:8080/apiMyPrescription/config",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "arr",            "description": "<p>an array of prescriptions (or an empty object if the last-modified header is not sent</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   [\n\n   ]\n}",          "type": "json"        },        {          "title": "Success-Response (304):",          "content": "HTTP/1.1 304 Not Modified\n{\n   [\n\n   ]\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiMyPrescription.js",    "groupTitle": "MyPrescription"  },  {    "name": "Get_Product_By_Code",    "description": "<p>Retrieve a product from medic section by a code</p>",    "group": "MyPrescription",    "type": "get",    "url": "/apiMyPrescription/drug",    "title": "Retrieve a product from medic section by a code",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "drugCode",            "description": "<p>the code of the product</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -H \"Authorization: Bearer \" http://localhost:8080/apiMyPrescription/drug?drugCode=windw28312c87dw1",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "obj",            "description": "<p>an object containing the product</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   [\n\n   ]\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n\n}",          "type": "json"        },        {          "title": "Error-Response (4xx):",          "content": "HTTP/1.1 404 EntityNotFound Error\n{\n\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "EntityNotFound",            "description": "<p>Error - Entity not found</p>"          }        ]      }    },    "filename": "app/apiMyPrescription.js",    "groupTitle": "MyPrescription",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Get_Product_By_Id",    "description": "<p>Retrieve a product from medic section by id</p>",    "group": "MyPrescription",    "type": "get",    "url": "/apiMyPrescription/drug",    "title": "Retrieve a product from medic section by a code",    "version": "1.0.0",    "permission": [      {        "name": "medic",        "title": "Only users with medic rights can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>the id of the product</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -H \"Authorization: Bearer \" http://localhost:8080/apiMyPrescription/drug/id?id=windw28312c87dw1",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "obj",            "description": "<p>an object containing the product</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   [\n\n   ]\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n\n}",          "type": "json"        },        {          "title": "Error-Response (4xx):",          "content": "HTTP/1.1 404 EntityNotFound Error\n{\n\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "EntityNotFound",            "description": "<p>Error - Entity not found</p>"          }        ]      }    },    "filename": "app/apiMyPrescription.js",    "groupTitle": "MyPrescription",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Bearer",            "description": "<p>a Bearer token included in &quot;Authorization&quot; HTTP Header</p>"          }        ]      }    }  },  {    "name": "Public_Carousel_Images",    "description": "<p>Retrive carousel images for public section</p>",    "group": "Public_Carousel",    "type": "get",    "url": "/apiPublic/getCarouselData",    "title": "retrieve carousel images for public section",    "version": "1.0.0",    "permission": [      {        "name": "None",        "title": "Any user can access this route",        "description": ""      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:8080/apiPublic/getCarouselData",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "response.success",            "description": "<p>list of public carousel entities.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "    HTTP/1.1 200 OK\n    {\n      \"success\": [\n      {\n        \"_id\": \"\",\n        \"title\": \"\",\n        \"enable\": true,\n        \"order_index\": 0,\n        \"image_path\": \"\",\n        \"description\": \"\",\n        \"link_name\": \"\",\n        \"last_updated\": \"\",\n        \"content_id\": \"\",\n        \"type\": 1,\n        \"links\": {\n            \"url\": \"\",\n            \"content\": {\n                 \"_id\": \"\",\n                 \"title\": \"\",\n                 \"author\": \"\",\n                 \"description\": \"\",\n                 \"type\": 4,\n                 \"text\" : \"\"\n                 \"enable\": true,\n                 \"date_added\": \"\",\n                 \"last_updated\": \"\",\n                 \"file_path\": \"\",\n                 \"image_path\": \"\",\n                 \"therapeutic-areasID\": []\n        }\n}\n      ],\n      \"message\": \"Cererea a fost procesata cu succes\"\n    }",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n  \"error\": \"Query Error\",\n  \"data\" : {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiPublic.js",    "groupTitle": "Public_Carousel"  },  {    "name": "Retrive_Public_Categories",    "description": "<p>Get the public categories</p>",    "group": "Public_Categories",    "type": "get",    "url": "/apiPublic/categories",    "title": "Get the public categories",    "version": "1.0.0",    "permission": [      {        "name": "None",        "title": "Any user can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Id for retrieving a specific public category instead of all public categories.</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage (all categories):",        "content": "curl -i http://localhost:8080/apiPublic/categories",        "type": "curl"      },      {        "title": "Example usage (single category):",        "content": "curl -i http://localhost:8080/apiPublic/categories?id=wdjhwdnw11",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "response.success",            "description": "<p>a list of public categories (or a specific category).</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response (all categories):",          "content": "HTTP/1.1 200 OK\n{\n  \"success\": [\n  {\n    \"_id\": \"\",\n    \"name\": \"\",\n    \"isEnabled\": true,\n    \"description\": \"\",\n    \"image_path\" : Array,\n    \"last_updated\" : \"\"\n  }\n],\n  \"message\": \"Cererea a fost procesata cu succes\"\n}",          "type": "json"        },        {          "title": "Success-Response (one category):",          "content": "HTTP/1.1 200 OK\n{\n  \"success\":\n  {\n    \"_id\": \"\",\n    \"name\": \"\",\n    \"isEnabled\": true,\n    \"description\": \"\",\n    \"image_path\" : Array,\n    \"last_updated\" : \"\"\n  },\n  \"message\": \"Cererea a fost procesata cu succes\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n  \"error\": \"Error Message\",\n  \"data\" : {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiPublic.js",    "groupTitle": "Public_Categories"  },  {    "name": "Retrive_Most_Read_Public_Content",    "description": "<p>Retrive the most read content for public section</p>",    "group": "Public_Content",    "type": "get",    "url": "/apiPublic/content",    "title": "retrieve the most read content for public section",    "version": "1.0.0",    "permission": [      {        "name": "None",        "title": "Any user can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "type",            "description": "<p>Public content type (1 = stire (noutati); 2 = articol (despre); 3 = elearning; 4 = download).</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:8080/apiPublic/content?type=1",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "response.success",            "description": "<p>a list of public content entities.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\": [\n  {\n    \"_id\": \"\",\n    \"title\": \"\",\n    \"enable\": true,\n    \"author\": 0,\n    \"description\": \"\",\n    \"text\": \"\",\n    \"type\": Number,\n    \"date_added\": \"\",\n    \"last_updated\": \"\",\n    \"image_path\": \"\",\n    \"file_path\": \"\",\n    \"nrOfViews\" : Number,\n    \"therapeutic-areasID\" : Array\n    \"category\" : \"\"\n  }\n],\n  \"message\": \"Cererea a fost procesata cu succes\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n  \"error\": \"Error Message\",\n  \"data\" : {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiPublic.js",    "groupTitle": "Public_Content"  },  {    "name": "Retrive_Public_Content",    "description": "<p>Retrive content for public section</p>",    "group": "Public_Content",    "type": "get",    "url": "/apiPublic/content",    "title": "retrieve content for public section",    "version": "1.0.0",    "permission": [      {        "name": "None",        "title": "Any user can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "id",            "description": "<p>Optional id for retrieving a specific content instead of all public content.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "isFile",            "description": "<p>If the requested specific content is a file (use it in conjunction with the id param).</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "type",            "description": "<p>Public content type (1 = stire (noutati); 2 = articol (despre); 3 = elearning; 4 = download).</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "area",            "description": "<p>Filter the public content by therapeutic area.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "category",            "description": "<p>The category of the public content.</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage (for a single item):",        "content": "curl -i http://localhost:8080/apiPublic/content?type=1&area=23assdsdw&category=221ssaww",        "type": "curl"      },      {        "title": "Example usage (for all items):",        "content": "curl -i http://localhost:8080/apiPublic/content?id=232aasd&isFile=true",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "response.success",            "description": "<p>a list of public content entities (or a single public content item).</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response (in case of missing id in query params):",          "content": "HTTP/1.1 200 OK\n{\n  \"success\": [\n  {\n    \"_id\": \"\",\n    \"title\": \"\",\n    \"enable\": true,\n    \"author\": 0,\n    \"description\": \"\",\n    \"text\": \"\",\n    \"type\": Number,\n    \"date_added\": \"\",\n    \"last_updated\": \"\",\n    \"image_path\": \"\",\n    \"file_path\": \"\",\n    \"nrOfViews\" : Number,\n    \"therapeutic-areasID\" : Array\n    \"category\" : \"\"\n  }\n],\n  \"message\": \"Cererea a fost procesata cu succes\"\n}",          "type": "json"        },        {          "title": "Success-Response (in case of id in query params):",          "content": "HTTP/1.1 200 OK\n{\n  \"success\": {\n    \"_id\": \"\",\n    \"title\": \"\",\n    \"enable\": true,\n    \"author\": 0,\n    \"description\": \"\",\n    \"text\": \"\",\n    \"type\": Number,\n    \"date_added\": \"\",\n    \"last_updated\": \"\",\n    \"image_path\": \"\",\n    \"file_path\": \"\",\n    \"nrOfViews\" : Number,\n    \"therapeutic-areasID\" :\n    \"category\" : \"\"\n  },\n  \"message\": \"Cererea a fost procesata cu succes\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "ContentNotFound",            "description": "<p>The requested public content was not found.</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "AccessForbidden",            "description": "<p>You don't have access to the requested public content.</p>"          }        ],        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      },      "examples": [        {          "title": "Error-Response (4xx):",          "content": "HTTP/1.1 4xx Error\n{\n  \"error\": \"Error Message\",\n  \"data\" : {}\n}",          "type": "json"        },        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n  \"error\": \"Error Message\",\n  \"data\" : {}\n}",          "type": "json"        }      ]    },    "filename": "app/apiPublic.js",    "groupTitle": "Public_Content"  },  {    "name": "Retrive_Public_Content_For_Mobile",    "description": "<p>Retrive content for public section (mobile version)</p>",    "group": "Public_Content",    "type": "get",    "url": "/apiPublic/mobileContent",    "title": "retrieve content for public section (mobile version)",    "version": "1.0.0",    "permission": [      {        "name": "None",        "title": "Any user can access this route",        "description": ""      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:8080/apiPublic/mobileContent",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "response.success",            "description": "<p>a list of public content entities.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\": [\n  {\n    \"_id\": \"\",\n    \"title\": \"\",\n    \"enable\": true,\n    \"author\": 0,\n    \"description\": \"\",\n    \"text\": \"\",\n    \"type\": Number,\n    \"date_added\": \"\",\n    \"last_updated\": \"\",\n    \"image_path\": \"\",\n    \"file_path\": \"\",\n    \"nrOfViews\" : Number,\n    \"therapeutic-areasID\" : Array\n    \"category\" : \"\"\n  }\n],\n  \"message\": \"Cererea a fost procesata cu succes\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n  \"error\": \"Error Message\",\n  \"data\" : {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiPublic.js",    "groupTitle": "Public_Content"  },  {    "name": "Search_Public_Content",    "description": "<p>Search in public content for keyword/phrase</p>",    "group": "Public_Content",    "type": "get",    "url": "/apiPublic/publicSearch",    "title": "search in public content for keyword/phrase",    "version": "1.0.0",    "permission": [      {        "name": "None",        "title": "Any user can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "term",            "description": "<p>String/phrase to search.</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:8080/apiPublic/publicSearch?term=something",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "response.success",            "description": "<p>a list of public content entities.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\": [\n  {\n    \"_id\": \"\",\n    \"title\": \"\",\n    \"enable\": true,\n    \"author\": 0,\n    \"description\": \"\",\n    \"text\": \"\",\n    \"type\": Number,\n    \"date_added\": \"\",\n    \"last_updated\": \"\",\n    \"image_path\": \"\",\n    \"file_path\": \"\",\n    \"nrOfViews\" : Number,\n    \"therapeutic-areasID\" : Array\n    \"category\" : \"\"\n  }\n],\n  \"message\": \"Cererea a fost procesata cu succes\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n  \"error\": \"Error Message\",\n  \"data\" : {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiPublic.js",    "groupTitle": "Public_Content"  },  {    "name": "Update_Public_Content",    "description": "<p>Update number of views for a public content item</p>",    "group": "Public_Content",    "type": "put",    "url": "/apiPublic/content",    "title": "update number of views for a public content item",    "version": "1.0.0",    "permission": [      {        "name": "None",        "title": "Any user can access this route",        "description": ""      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id of the public content item which will be updated.</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i -X PUT http://localhost:8080/apiPublic/content?id=232aasd",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "response.success",            "description": "<p>The public content item before update.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\": {\n    \"_id\": \"\",\n    \"title\": \"\",\n    \"enable\": true,\n    \"author\": 0,\n    \"description\": \"\",\n    \"text\": \"\",\n    \"type\": Number,\n    \"date_added\": \"\",\n    \"last_updated\": \"\",\n    \"image_path\": \"\",\n    \"file_path\": \"\",\n    \"nrOfViews\" : Number,\n    \"therapeutic-areasID\" : Array\n    \"category\" : \"\"\n  },\n  \"message\": \"Cererea a fost procesata cu succes\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n  \"error\": \"Query Error\",\n  \"data\" : {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiPublic.js",    "groupTitle": "Public_Content"  },  {    "name": "Retrive_Public_Events",    "description": "<p>Get the public events</p>",    "group": "Public_Events",    "type": "get",    "url": "/apiPublic/events",    "title": "Get the public events",    "version": "1.0.0",    "permission": [      {        "name": "None",        "title": "Any user can access this route",        "description": ""      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:8080/apiPublic/events",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "response.success",            "description": "<p>a list of public events.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\": [\n  {\n    \"_id\": \"\",\n    \"description\": \"\",\n    \"enable\": true,\n    \"end\": \"\",\n    \"groupsID\" : Array,\n    \"last_updated\" : \"\",\n    \"name\" : \"\"\n    \"place\" : \"\",\n    \"start\" : \"\",\n    \"type\" : \"\",\n    \"listconferences\" : Array,\n    \"pathologiesID\" : Array,\n    \"isPublic\" : true\n  }\n],\n  \"message\": \"Cererea a fost procesata cu succes\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n  \"error\": \"Error Message\",\n  \"data\" : {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiPublic.js",    "groupTitle": "Public_Events"  },  {    "name": "Retrive_Terms_Conditions",    "description": "<p>Get the terms &amp; conditions</p>",    "group": "Terms___conditions",    "type": "get",    "url": "/apiPublic/termsAndConditionsStaywell",    "title": "Get the terms & conditions",    "version": "1.0.0",    "permission": [      {        "name": "None",        "title": "Any user can access this route",        "description": ""      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:8080/apiPublic/termsAndConditionsStaywell",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "HTML",            "optional": false,            "field": "HTMLContent",            "description": "<p>The HTML page containing the terms &amp; conditions.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n'<html></html>'",          "type": "HTML"        }      ]    },    "filename": "app/apiPublic.js",    "groupTitle": "Terms___conditions"  },  {    "name": "Retrive_Terms_Conditions_MSD",    "description": "<p>Get the terms &amp; conditions (MSD)</p>",    "group": "Terms___conditions_MSD",    "type": "get",    "url": "/apiPublic/termsAndConditionsStaywell",    "title": "Get the terms & conditions (MSD)",    "version": "1.0.0",    "permission": [      {        "name": "None",        "title": "Any user can access this route",        "description": ""      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:8080/apiPublic/termsAndConditionsMSD",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "HTML",            "optional": false,            "field": "HTMLContent",            "description": "<p>The HTML page containing the terms &amp; conditions.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n'<html></html>'",          "type": "HTML"        }      ]    },    "filename": "app/apiPublic.js",    "groupTitle": "Terms___conditions_MSD"  },  {    "name": "Retrive_Therapeutic_Areas",    "description": "<p>Get the public therapeutic areas</p>",    "group": "Therapeutic_Areas",    "type": "get",    "url": "/apiPublic/therapeuticAreas",    "title": "Get the public therapeutic areas",    "version": "1.0.0",    "permission": [      {        "name": "None",        "title": "Any user can access this route",        "description": ""      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:8080/apiPublic/therapeuticAreas",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "response.success",            "description": "<p>a list of public therapeutic areas.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response.message",            "description": "<p>A success message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\": [\n  {\n    \"_id\": \"\",\n    \"name\": \"\",\n    \"enabled\": true,\n    \"last_updated\": \"\"\n  }\n],\n  \"message\": \"Cererea a fost procesata cu succes\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response (500):",          "content": "HTTP/1.1 500 Server Error\n{\n  \"error\": \"Error Message\",\n  \"data\" : {}\n}",          "type": "json"        }      ],      "fields": {        "Error 500": [          {            "group": "Error 500",            "type": "Object",            "optional": false,            "field": "ServerError",            "description": "<p>The requested operation could not be executed</p>"          }        ]      }    },    "filename": "app/apiPublic.js",    "groupTitle": "Therapeutic_Areas"  }]
